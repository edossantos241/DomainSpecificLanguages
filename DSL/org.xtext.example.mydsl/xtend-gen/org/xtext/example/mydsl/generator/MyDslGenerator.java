/**
 * generated by Xtext 2.14.0
 */
package org.xtext.example.mydsl.generator;

import fsm.FSM;
import fsm.FinalState;
import fsm.InitialState;
import fsm.State;
import fsm.Transition;
import java.util.function.Consumer;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MyDslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    EObject _get = resource.getContents().get(0);
    FSM myfsm = ((FSM) _get);
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("abstract class FSM{}");
    fsa.generateFile("FSM.java", _builder);
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("abstract class State{}");
    fsa.generateFile("State.java", _builder_1);
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("abstract class InitialState extends State{}");
    fsa.generateFile("InitialState.java", _builder_2);
    StringConcatenation _builder_3 = new StringConcatenation();
    _builder_3.append("abstract class FinalState extends State{}");
    fsa.generateFile("FinalState.java", _builder_3);
    StringConcatenation _builder_4 = new StringConcatenation();
    _builder_4.append("abstract class Transition{}");
    fsa.generateFile("Transition.java", _builder_4);
    final Consumer<State> _function = (State s) -> {
      if ((s instanceof InitialState)) {
        String _name = ((InitialState)s).getName();
        String _plus = (_name + ".java");
        StringConcatenation _builder_5 = new StringConcatenation();
        _builder_5.append("class ");
        String _name_1 = ((InitialState)s).getName();
        String _plus_1 = (_builder_5.toString() + _name_1);
        StringConcatenation _builder_6 = new StringConcatenation();
        _builder_6.append(" ");
        _builder_6.append("extends InitialState{}");
        String _plus_2 = (_plus_1 + _builder_6);
        fsa.generateFile(_plus, _plus_2);
      } else {
        if ((s instanceof FinalState)) {
          String _name_2 = ((FinalState)s).getName();
          String _plus_3 = (_name_2 + ".java");
          StringConcatenation _builder_7 = new StringConcatenation();
          _builder_7.append("class ");
          String _name_3 = ((FinalState)s).getName();
          String _plus_4 = (_builder_7.toString() + _name_3);
          StringConcatenation _builder_8 = new StringConcatenation();
          _builder_8.append(" ");
          _builder_8.append("extends FinalState{}");
          String _plus_5 = (_plus_4 + _builder_8);
          fsa.generateFile(_plus_3, _plus_5);
        } else {
          String _name_4 = s.getName();
          String _plus_6 = (_name_4 + ".java");
          StringConcatenation _builder_9 = new StringConcatenation();
          _builder_9.append("class ");
          String _name_5 = s.getName();
          String _plus_7 = (_builder_9.toString() + _name_5);
          StringConcatenation _builder_10 = new StringConcatenation();
          _builder_10.append(" ");
          _builder_10.append("extends State{}");
          String _plus_8 = (_plus_7 + _builder_10);
          fsa.generateFile(_plus_6, _plus_8);
        }
      }
    };
    myfsm.getState().forEach(_function);
    final Consumer<Transition> _function_1 = (Transition t) -> {
      String _name = t.getName();
      String _plus = (_name + ".java");
      StringConcatenation _builder_5 = new StringConcatenation();
      _builder_5.append("class ");
      String _name_1 = t.getName();
      String _plus_1 = (_builder_5.toString() + _name_1);
      StringConcatenation _builder_6 = new StringConcatenation();
      _builder_6.append(" ");
      _builder_6.append("extends Transition{}");
      String _plus_2 = (_plus_1 + _builder_6);
      fsa.generateFile(_plus, _plus_2);
    };
    myfsm.getTransition().forEach(_function_1);
    String _name = myfsm.getName();
    String _plus = (_name + ".java");
    StringConcatenation _builder_5 = new StringConcatenation();
    _builder_5.append("class ");
    String _name_1 = myfsm.getName();
    String _plus_1 = (_builder_5.toString() + _name_1);
    StringConcatenation _builder_6 = new StringConcatenation();
    _builder_6.append(" ");
    _builder_6.append("extends FSM{");
    _builder_6.newLine();
    _builder_6.append("\t\t\t");
    _builder_6.append("public static void main(String args[]){");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t");
    _builder_6.append("State initial = new sI();");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t");
    _builder_6.append("State finalState = new sF();");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t");
    _builder_6.append("State current =  initial;");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t");
    _builder_6.append("System.out.println(\"Début\");");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t");
    _builder_6.append("while (current != finalState){");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t");
    _builder_6.append("switch (current.getClass().getName()) {");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t");
    _builder_6.append("case \"sI\":");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("System.out.println(\"Transition de l\'état initial à l\'état ouvert\");");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("current = new sOpen();");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("break;");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t");
    _builder_6.append("case \"sOpen\":");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("System.out.println(\"Transition de l\'état ouvert à l\'état fermé\");");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("current = new sFerme();");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("break;");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t");
    _builder_6.append("case \"sFerme\":");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("System.out.println(\"Transition de l\'état fermé à l\'état final\");");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("current = finalState;");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t\t\t");
    _builder_6.append("break;");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t\t");
    _builder_6.append("}");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t");
    _builder_6.append("}");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t\t");
    _builder_6.append("System.out.println(\"Etat final atteind\");");
    _builder_6.newLine();
    _builder_6.append("\t\t\t\t\t\t");
    _builder_6.append("}");
    String _plus_2 = (_plus_1 + _builder_6);
    fsa.generateFile(_plus, _plus_2);
  }
}
